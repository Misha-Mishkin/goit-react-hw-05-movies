{"version":3,"file":"static/js/379.de35498a.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-05-movies/./src/components/MovieRender/MovieRender.module.css?bd36","components/MovieRender/MovieRender.jsx","pages/MovieDetails.jsx","components/SearhMovieRender/SearhMovieRender.jsx","pages/Movies.jsx","services/API.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieRender_container__it4s2\",\"img_container\":\"MovieRender_img_container__9XzDi\",\"content_container\":\"MovieRender_content_container__-VVgG\"};","import s from './MovieRender.module.css';\n\nexport default function MoviePublic({ item }) {\n  return (\n    <div className={s.container}>\n      <div className={s.img_container}>\n        <img\n          src={`https://image.tmdb.org/t/p/w300/${item.poster_path}`}\n          alt={item.title}\n        />\n      </div>\n\n      <div className={s.content_container}>\n        <h2>{item.title}</h2>\n        <p>User score: {item.vote_average * 10}%</p>\n        <h3>Overview</h3>\n        <p>{item.overview}</p>\n        <h3>Genres</h3>\n        <p>\n          {item.genres.map(item => {\n            return `${item.name}`;\n          })}\n        </p>\n      </div>\n    </div>\n  );\n}\n","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, Link, Outlet, useLocation } from 'react-router-dom';\nimport { fetchMovieDetails } from '../services/API';\nimport Movies from './Movies';\nimport MoviePublic from 'components/MovieRender';\nimport Loader from 'components/Loader';\n\nexport default function MovieDetails() {\n  const { movieId } = useParams();\n  const [item, setItem] = useState(null);\n  const location = useLocation();\n\n  useEffect(() => {\n    fetchMovieDetails(movieId).then(res => {\n      setItem(res.data);\n    });\n  }, [movieId]);\n\n  const path = location?.state?.from ?? '/';\n\n  return (\n    <>\n      <Link to={path}>\n        ðŸ‘ˆ Go back\n        <Movies />\n      </Link>\n      {item && <MoviePublic item={item} />}\n      <hr />\n      <h3>Additional information</h3>\n      <ul>\n        <li>\n          <Link to=\"cast\" state={{ from: path }}>\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link to=\"reviews\" state={{ from: path }}>\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <hr />\n      <Suspense fallback={<Loader />}>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n","import { useLocation, Link } from 'react-router-dom';\n\nexport default function SearhMovieRender({ movieList }) {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movieList.map(item => (\n        <li key={item.id}>\n          <Link to={`/movies/${item.id}`} state={{ from: location }}>\n            {item.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { fetchSearchMovies } from '../services/API';\nimport SearhMovieRender from 'components/SearhMovieRender';\n\nexport default function Movies() {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movieList, setMovieList] = useState(null);\n\n  // const location = useLocation();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query !== null) {\n      setSearchQuery(query);\n      fetchSearchMovies(query).then(res => {\n        setMovieList(res.data.results);\n      });\n    }\n  }, [query]);\n\n  const handleChange = e => {\n    setSearchQuery(e.currentTarget.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (searchQuery.trim() === '') {\n      return;\n    }\n\n    setSearchParams(`query=${searchQuery}`);\n\n    fetchSearchMovies(searchQuery).then(res => {\n      setMovieList(res.data.results);\n    });\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit} autoComplete=\"off\">\n        <input type=\"text\" name=\"searchQuery\" onChange={handleChange}></input>\n        <button type=\"submit\">Search</button>\n      </form>\n      <div>\n        {movieList && <SearhMovieRender/>\n          }\n      </div>\n    </div>\n  );\n}\n","import axios from 'axios';\n\nconst API_KEY = 'b610c698525bd18a195a4333e81be16d';\nconst BASE_URL = `https://api.themoviedb.org/3`;\n\nexport async function fetchMoviesTrending() {\n  return await axios(\n    `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=1`\n  );\n}\n\nexport async function fetchSearchMovies(movieName) {\n  return await axios(\n    `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${movieName}&page=1`\n  );\n}\n\nexport async function fetchMovieDetails(movie_id) {\n  return await axios(\n    `${BASE_URL}/movie/${movie_id}?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function fetchMovieCredits(movie_id) {\n  return await axios(\n    `${BASE_URL}/movie/${movie_id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n}\n\nexport async function fetchMovieReviews(movie_id) {\n  return await axios(\n    `${BASE_URL}/movie/${movie_id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n}"],"names":["MoviePublic","item","className","s","src","poster_path","alt","title","vote_average","overview","genres","map","name","MovieDetails","movieId","useParams","useState","setItem","location","useLocation","useEffect","fetchMovieDetails","then","res","data","path","state","from","to","Movies","Suspense","fallback","Loader","SearhMovieRender","movieList","id","useSearchParams","searchParams","setSearchParams","searchQuery","setSearchQuery","setMovieList","query","get","fetchSearchMovies","results","onSubmit","e","preventDefault","trim","autoComplete","type","onChange","currentTarget","value","API_KEY","BASE_URL","fetchMoviesTrending","axios","movieName","movie_id","fetchMovieCredits","fetchMovieReviews"],"sourceRoot":""}